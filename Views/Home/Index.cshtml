@model WeatherDashboardViewModel
@{
    ViewData["Title"] = "Главная";
}

<div class="text-center mb-4">
    <h1 class="display-4">Анализ погоды</h1>
    <p>Добро пожаловать в приложение для анализа метеорологических данных</p>
</div>

@if (Model.Years.Count == 0)
{
    <div class="alert alert-info">
        <h4>Нет данных для отображения</h4>
        <p>Пожалуйста, импортируйте данные о погоде через <a asp-controller="Data" asp-action="Import">страницу импорта</a>.</p>
    </div>
}
else
{
    <div class="card mb-4">
        <div class="card-header">
            <h5>Средняя температура по месяцам</h5>
        </div>
        <div class="card-body">
            <form asp-action="Index" method="post" class="mb-4">
                <div class="row align-items-end">
                    <div class="col-md-4">
                        <label for="year" class="form-label">Выберите год:</label>
                        <select name="year" id="year" class="form-select" onchange="this.form.submit()">
                            @foreach (var year in Model.Years)
                            {
                                @if (year == Model.SelectedYear)
                                {
                                    <option value="@year" selected>@year</option>
                                }
                                else
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </form>

            <div class="chart-container" style="position: relative; height: 400px; width: 100%;">
                <canvas id="temperatureChart"></canvas>
            </div>

           
            <div id="chartMessage" class="mt-3"></div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Быстрые ссылки</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <a asp-controller="Data" asp-action="List">Просмотр всех данных</a>
                        </li>
                        <li class="list-group-item">
                            <a asp-controller="Data" asp-action="Import">Импорт новых данных</a>
                        </li>
                        <li class="list-group-item">
                            <a asp-controller="Data" asp-action="DeleteAll">Удалить все данные</a>
                        </li>
                        <li class="list-group-item">
                            <a asp-controller="Data" asp-action="DeleteYear">Удалить данные за год</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Проверяем, загружен ли Chart.js
        if (typeof Chart === 'undefined') {
            console.error('Chart.js не загружен. Проверь путь к библиотеке.');
            document.getElementById('chartMessage').innerHTML = '<div class="alert alert-danger">Chart.js не загружен. Проверь подключение через CDN или локальный файл.</div>';
        } else {
            console.log('Chart.js успешно загружен.');
            
            document.addEventListener('DOMContentLoaded', function () {
                // Получаем контекст канваса
                var ctx = document.getElementById('temperatureChart');
                if (!ctx) {
                    console.error('Элемент canvas с id="temperatureChart" не найден.');
                    document.getElementById('chartMessage').innerHTML = '<div class="alert alert-danger">Элемент графика не найден. Проверь HTML.</div>';
                    return;
                }

                var context = ctx.getContext('2d');

                // Проверяем, есть ли данные для графика
                var labels = @Html.Raw(Json.Serialize(Model.AverageTemperatures?.Keys != null
        ? Model.AverageTemperatures.Keys.ToList()
        : new List<string> { "Нет данных" }));
                var data = @Html.Raw(Json.Serialize(Model.AverageTemperatures?.Values != null
          ? Model.AverageTemperatures.Values.ToList()
          : new List<double> { 0 }));

                console.log('Labels:', labels);
                console.log('Data:', data);

                if (!labels || !data || labels.length === 0 || data.length === 0) {
                    console.warn('Нет данных для построения графика. Показываем пустой график.');
                    document.getElementById('chartMessage').innerHTML = '<div class="alert alert-warning">Нет данных для построения графика. Импортируйте данные или выберите другой год.</div>';
                    labels = ['Нет данных'];
                    data = [0];
                }

                
                try {
                    var chart = new Chart(context, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Средняя температура (°C)',
                                data: data,
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Температура (°C)'
                                    }
                                },
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Месяц'
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                }
                            }
                        }
                    });
                    console.log('График успешно создан.');
                } catch (error) {
                    console.error('Ошибка при создании графика:', error);
                    document.getElementById('chartMessage').innerHTML = '<div class="alert alert-danger">Ошибка при создании графика. Проверь консоль для деталей.</div>';
                }
            });
        }
    </script>
}